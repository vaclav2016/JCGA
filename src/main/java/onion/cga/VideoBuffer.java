/*
(—Å) 2016 Copyright by vaclav2016, https://github.com/vaclav2016/JCGA-Tetris/

Boost Software License - Version 1.0 - August 17th, 2003
Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:
The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/
package onion.cga;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public interface VideoBuffer {

	int getWidth();

	int getHeight();

	byte[] getBuf();

	void clear();

	void fill(byte color);

	void drawPixel(int x, int y, byte color);

	void drawHLine(int x, int y, int width, byte color);

	void drawVLine(int x, int y, int height, byte color);

	void drawRectF(int x, int y, int width, int height, byte color);

	void drawRectB(int x, int y, int width, int height, byte color);

	void drawRectBf(int x, int y, int width, int height, byte fgColor, byte bgColor);

	void drawStr(CgaFont font, int x, int y, String str, byte color);

	void fullCopyFrom(VideoBuffer src);

	void copyFrom(VideoBuffer src, int dstX, int dstY);

	void copyPartFrom(VideoBuffer srcScreen, int srcX, int srcY, int dstX, int dstY, int width, int height);

	void copySpriteFrom(VideoBuffer srcScreen, int dstX, int dstY);

	void copyBitSpriteFrom(VideoBuffer srcScreen, byte srcColor, int dstX, int dstY, byte dstColor);

	void load(InputStream is) throws IOException;

	void save(OutputStream os) throws IOException;

}
